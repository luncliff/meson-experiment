name: "Windows"

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest
    env:
      VCPKG_TARGET_TRIPLET: x64-windows
    steps:
      - uses: actions/checkout@v4

      - uses: microsoft/setup-msbuild@v2 # https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: "Install python packages"
        run: python -m pip install -r requirements.txt
        shell: pwsh

      - uses: humbletim/install-vulkan-sdk@v1.1.1
        with:
          version: "1.3.239.0"
          cache: true

      - uses: lukka/get-cmake@v3.29.2
      - uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgGitCommitId: "C:/vcpkg" # VCPKG_INSTALLATION_ROOT
          runVcpkgInstall: true
          runVcpkgFormatString: '[`install`, `--clean-buildtrees-after-build`, `--clean-packages-after-build`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`, `--x-install-root`, `$[env.VCPKG_INSTALL_DIR]`]'
        env:
          VCPKG_INSTALL_DIR: "${{ github.workspace }}/externals"

      - name: "Run meson(setup)"
        run: |
          meson setup --backend vs2022 --vsenv `
            --prefix "$workspace/install" `
            --buildtype debug `
            --pkg-config-path "$workspace/externals/${{ env.VCPKG_DEFAULT_TRIPLET }}/debug/lib/pkgconfig" `
            --build.pkg-config-path "$workspace/externals/${{ env.VCPKG_TARGET_TRIPLET }}/debug/lib/pkgconfig" `
            --cmake-prefix-path "$workspace/externals/${{ env.VCPKG_DEFAULT_TRIPLET }}" `
            --build.cmake-prefix-path "$workspace/externals/${{ env.VCPKG_TARGET_TRIPLET }}" `
            "build-x64-windows"
        shell: pwsh

      - uses: actions/upload-artifact@v4.3.1
        with:
          name: meson-logs
          path: build-x64-windows/meson-logs/
